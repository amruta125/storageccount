{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimInstanceName": {
      "type": "string",
      "metadata": {
        "description": "The name of your API Management service."
      }
    },
    "apis_service_app_name": {
      "type": "string"
    },
    "apim_service_product_name": {
      "type": "string"
    },
    "apis_app_name_operation": {
      "type": "string"
    },
    "policies_policy_name": {
      "type": "string"
    },
    "api_schema_name": {
      "type": "string"
    },
    "apis_operation_policy": {
       "type": "string"
    }

  },
  "variables": {
    "location": "[string(resourceGroup().location)]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimInstanceName'), '/', parameters('apis_service_app_name'))]",
      "apiVersion": "2017-03-01",
      "scale": null,
      "properties": {
        "displayName": "BAIN Service App",
        "apiRevision": "1",
        "description": "",
        "serviceUrl": "http://bainserviceapp",
        "path": "Bainapp",
        "protocols": [
          "http",
          "https"
        ],
        "authenticationSettings": null,
        "subscriptionKeyParameterNames": null,
        "isCurrent": true
      },

    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimInstanceName'), '/', parameters('apis_service_app_name'), '/', parameters('apis_app_name_operation'))]",
      "apiVersion": "2017-03-01",
      "scale": null,
      "properties": {
        "displayName": "Values",
        "method": "GET",
        "urlTemplate": "/api/values",
        "description": "",
        "policies": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimInstanceName'), parameters('apis_service_app_name'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimInstanceName'), '/', parameters('apis_service_app_name'), '/',parameters('apis_app_name_operation'), '/', parameters('apis_operation_policy'))]",
      "apiVersion": "2017-03-01",
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimInstanceName') , parameters('apis_service_app_name'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimInstanceName'), parameters('apis_service_app_name'), parameters('apis_app_name_operation'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-12-01",
      "name": "[concat(parameters('apimInstanceName'), '/', parameters('apis_service_app_name'), '/',parameters('api_schema_name'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimInstanceName'),  parameters('apis_service_app_name'))]"
      ],
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "definitions": {}
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apimInstanceName'), '/', parameters('apis_service_app_name'), '/', parameters('policies_policy_name'))]",
      "apiVersion": "2017-03-01",
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimInstanceName'), parameters('apis_service_app_name'))]"
      ]
    }

  ]
}
